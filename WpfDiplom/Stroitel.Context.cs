//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfDiplom
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StroitelEntities : DbContext
    {
        public StroitelEntities()
            : base("name=StroitelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Клиент> Клиент { get; set; }
        public virtual DbSet<Поставщик> Поставщик { get; set; }
        public virtual DbSet<Ремонт> Ремонт { get; set; }
        public virtual DbSet<Товар> Товар { get; set; }
        public virtual DbSet<user> user { get; set; }
        public virtual DbSet<Клиенты_купившие_новинки> Клиенты_купившие_новинки { get; set; }
        public virtual DbSet<Клиенты_Могилёв> Клиенты_Могилёв { get; set; }
        public virtual DbSet<Клиенты_Область> Клиенты_Область { get; set; }
        public virtual DbSet<Обзор_новинок> Обзор_новинок { get; set; }
        public virtual DbSet<Отчет_по_ремонту> Отчет_по_ремонту { get; set; }
        public virtual DbSet<Результат_сотрудников_за_день> Результат_сотрудников_за_день { get; set; }
        public virtual DbSet<Товарные_остатки> Товарные_остатки { get; set; }
        public virtual DbSet<Заказ> Заказ { get; set; }
        public virtual DbSet<Сотрудник> Сотрудник { get; set; }
        public virtual DbSet<Выведенный_ассортимент> Выведенный_ассортимент { get; set; }
        public virtual DbSet<Удаленные_клиенты> Удаленные_клиенты { get; set; }
        public virtual DbSet<Заказы_клиентов> Заказы_клиентов { get; set; }
        public virtual DbSet<Оптовые_клиенты> Оптовые_клиенты { get; set; }
        public virtual DbSet<Продажи_ОПТ_за_день> Продажи_ОПТ_за_день { get; set; }
        public virtual DbSet<Продажи_РОЗНИЦА_за_день> Продажи_РОЗНИЦА_за_день { get; set; }
        public virtual DbSet<Розничные_клиенты> Розничные_клиенты { get; set; }
    
        public virtual int Add_Client(string surname, string name, string middle_name, string organization, string address, string phone, string sales_channel)
        {
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("Middle_name", middle_name) :
                new ObjectParameter("Middle_name", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var sales_channelParameter = sales_channel != null ?
                new ObjectParameter("sales_channel", sales_channel) :
                new ObjectParameter("sales_channel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Client", surnameParameter, nameParameter, middle_nameParameter, organizationParameter, addressParameter, phoneParameter, sales_channelParameter);
        }
    
        public virtual int Add_New_Product(string name_product, string manufacturer, string unit, Nullable<int> balance, Nullable<decimal> price, Nullable<int> code_provider, string @new)
        {
            var name_productParameter = name_product != null ?
                new ObjectParameter("name_product", name_product) :
                new ObjectParameter("name_product", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("manufacturer", manufacturer) :
                new ObjectParameter("manufacturer", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var code_providerParameter = code_provider.HasValue ?
                new ObjectParameter("code_provider", code_provider) :
                new ObjectParameter("code_provider", typeof(int));
    
            var newParameter = @new != null ?
                new ObjectParameter("new", @new) :
                new ObjectParameter("new", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_New_Product", name_productParameter, manufacturerParameter, unitParameter, balanceParameter, priceParameter, code_providerParameter, newParameter);
        }
    
        public virtual int Add_Personal(string surname, string name, string patronymic, string position, string phone)
        {
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("patronymic", patronymic) :
                new ObjectParameter("patronymic", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Personal", surnameParameter, nameParameter, patronymicParameter, positionParameter, phoneParameter);
        }
    
        public virtual int Add_Provider(string organization, string address, string phone, string contact_person)
        {
            var organizationParameter = organization != null ?
                new ObjectParameter("organization", organization) :
                new ObjectParameter("organization", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Provider", organizationParameter, addressParameter, phoneParameter, contact_personParameter);
        }
    
        public virtual int Add_Remont(Nullable<int> act, Nullable<System.DateTime> date, string ready, Nullable<System.DateTime> date_vydachi, Nullable<int> code_cl, Nullable<int> cod_tov, Nullable<decimal> stoim, string zakl)
        {
            var actParameter = act.HasValue ?
                new ObjectParameter("act", act) :
                new ObjectParameter("act", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var readyParameter = ready != null ?
                new ObjectParameter("ready", ready) :
                new ObjectParameter("ready", typeof(string));
    
            var date_vydachiParameter = date_vydachi.HasValue ?
                new ObjectParameter("date_vydachi", date_vydachi) :
                new ObjectParameter("date_vydachi", typeof(System.DateTime));
    
            var code_clParameter = code_cl.HasValue ?
                new ObjectParameter("code_cl", code_cl) :
                new ObjectParameter("code_cl", typeof(int));
    
            var cod_tovParameter = cod_tov.HasValue ?
                new ObjectParameter("cod_tov", cod_tov) :
                new ObjectParameter("cod_tov", typeof(int));
    
            var stoimParameter = stoim.HasValue ?
                new ObjectParameter("stoim", stoim) :
                new ObjectParameter("stoim", typeof(decimal));
    
            var zaklParameter = zakl != null ?
                new ObjectParameter("zakl", zakl) :
                new ObjectParameter("zakl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Remont", actParameter, dateParameter, readyParameter, date_vydachiParameter, code_clParameter, cod_tovParameter, stoimParameter, zaklParameter);
        }
    
        public virtual int Add_Zakaz_NEW(Nullable<System.DateTime> date, Nullable<decimal> price_dostavki, Nullable<int> kolichestvo, Nullable<decimal> skidka, string oplata, Nullable<int> cod_kl, Nullable<int> cod_sotr, Nullable<int> cod_tovara)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var price_dostavkiParameter = price_dostavki.HasValue ?
                new ObjectParameter("Price_dostavki", price_dostavki) :
                new ObjectParameter("Price_dostavki", typeof(decimal));
    
            var kolichestvoParameter = kolichestvo.HasValue ?
                new ObjectParameter("Kolichestvo", kolichestvo) :
                new ObjectParameter("Kolichestvo", typeof(int));
    
            var skidkaParameter = skidka.HasValue ?
                new ObjectParameter("Skidka", skidka) :
                new ObjectParameter("Skidka", typeof(decimal));
    
            var oplataParameter = oplata != null ?
                new ObjectParameter("Oplata", oplata) :
                new ObjectParameter("Oplata", typeof(string));
    
            var cod_klParameter = cod_kl.HasValue ?
                new ObjectParameter("Cod_kl", cod_kl) :
                new ObjectParameter("Cod_kl", typeof(int));
    
            var cod_sotrParameter = cod_sotr.HasValue ?
                new ObjectParameter("Cod_sotr", cod_sotr) :
                new ObjectParameter("Cod_sotr", typeof(int));
    
            var cod_tovaraParameter = cod_tovara.HasValue ?
                new ObjectParameter("Cod_tovara", cod_tovara) :
                new ObjectParameter("Cod_tovara", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Zakaz_NEW", dateParameter, price_dostavkiParameter, kolichestvoParameter, skidkaParameter, oplataParameter, cod_klParameter, cod_sotrParameter, cod_tovaraParameter);
        }
    
        public virtual ObjectResult<Otric_oststki_NEW_Result> Otric_oststki_NEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Otric_oststki_NEW_Result>("Otric_oststki_NEW");
        }
    
        public virtual int Prihod_Product(Nullable<int> cod_post, Nullable<int> code_tovara, Nullable<int> kolichectvo, Nullable<decimal> new_price)
        {
            var cod_postParameter = cod_post.HasValue ?
                new ObjectParameter("cod_post", cod_post) :
                new ObjectParameter("cod_post", typeof(int));
    
            var code_tovaraParameter = code_tovara.HasValue ?
                new ObjectParameter("code_tovara", code_tovara) :
                new ObjectParameter("code_tovara", typeof(int));
    
            var kolichectvoParameter = kolichectvo.HasValue ?
                new ObjectParameter("kolichectvo", kolichectvo) :
                new ObjectParameter("kolichectvo", typeof(int));
    
            var new_priceParameter = new_price.HasValue ?
                new ObjectParameter("new_price", new_price) :
                new ObjectParameter("new_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prihod_Product", cod_postParameter, code_tovaraParameter, kolichectvoParameter, new_priceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Tovar_ostatok_money_NEW_Result> Tovar_ostatok_money_NEW(Nullable<int> cod_tovara)
        {
            var cod_tovaraParameter = cod_tovara.HasValue ?
                new ObjectParameter("cod_tovara", cod_tovara) :
                new ObjectParameter("cod_tovara", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tovar_ostatok_money_NEW_Result>("Tovar_ostatok_money_NEW", cod_tovaraParameter);
        }
    
        public virtual int Вывести_из_ассортимента(Nullable<int> code_tovara)
        {
            var code_tovaraParameter = code_tovara.HasValue ?
                new ObjectParameter("code_tovara", code_tovara) :
                new ObjectParameter("code_tovara", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Вывести_из_ассортимента", code_tovaraParameter);
        }
    
        public virtual int Выдача_ремонта(Nullable<int> act, string ready, Nullable<System.DateTime> data_v, Nullable<decimal> stoim, string zacluch)
        {
            var actParameter = act.HasValue ?
                new ObjectParameter("Act", act) :
                new ObjectParameter("Act", typeof(int));
    
            var readyParameter = ready != null ?
                new ObjectParameter("Ready", ready) :
                new ObjectParameter("Ready", typeof(string));
    
            var data_vParameter = data_v.HasValue ?
                new ObjectParameter("Data_v", data_v) :
                new ObjectParameter("Data_v", typeof(System.DateTime));
    
            var stoimParameter = stoim.HasValue ?
                new ObjectParameter("Stoim", stoim) :
                new ObjectParameter("Stoim", typeof(decimal));
    
            var zacluchParameter = zacluch != null ?
                new ObjectParameter("Zacluch", zacluch) :
                new ObjectParameter("Zacluch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Выдача_ремонта", actParameter, readyParameter, data_vParameter, stoimParameter, zacluchParameter);
        }
    
        public virtual ObjectResult<Заказы_Клиента_Result> Заказы_Клиента(Nullable<System.DateTime> data_nach, Nullable<System.DateTime> data_okonch, Nullable<int> cod_clienta)
        {
            var data_nachParameter = data_nach.HasValue ?
                new ObjectParameter("data_nach", data_nach) :
                new ObjectParameter("data_nach", typeof(System.DateTime));
    
            var data_okonchParameter = data_okonch.HasValue ?
                new ObjectParameter("data_okonch", data_okonch) :
                new ObjectParameter("data_okonch", typeof(System.DateTime));
    
            var cod_clientaParameter = cod_clienta.HasValue ?
                new ObjectParameter("cod_clienta", cod_clienta) :
                new ObjectParameter("cod_clienta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Заказы_Клиента_Result>("Заказы_Клиента", data_nachParameter, data_okonchParameter, cod_clientaParameter);
        }
    
        public virtual ObjectResult<Кол_и_сумма_заказов_клиента_Result> Кол_и_сумма_заказов_клиента(Nullable<System.DateTime> data_n, Nullable<System.DateTime> data_end, Nullable<int> code_kl)
        {
            var data_nParameter = data_n.HasValue ?
                new ObjectParameter("data_n", data_n) :
                new ObjectParameter("data_n", typeof(System.DateTime));
    
            var data_endParameter = data_end.HasValue ?
                new ObjectParameter("data_end", data_end) :
                new ObjectParameter("data_end", typeof(System.DateTime));
    
            var code_klParameter = code_kl.HasValue ?
                new ObjectParameter("code_kl", code_kl) :
                new ObjectParameter("code_kl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Кол_и_сумма_заказов_клиента_Result>("Кол_и_сумма_заказов_клиента", data_nParameter, data_endParameter, code_klParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Курсор_кол_товарных_позиций()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Курсор_кол_товарных_позиций");
        }
    
        public virtual ObjectResult<Курсор_просмотр_клиентов_Result> Курсор_просмотр_клиентов()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Курсор_просмотр_клиентов_Result>("Курсор_просмотр_клиентов");
        }
    
        public virtual ObjectResult<Курсор_сумма_продаж_Result> Курсор_сумма_продаж()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Курсор_сумма_продаж_Result>("Курсор_сумма_продаж");
        }
    
        public virtual ObjectResult<Поставщик_товар_Result> Поставщик_товар(Nullable<int> cod_post)
        {
            var cod_postParameter = cod_post.HasValue ?
                new ObjectParameter("cod_post", cod_post) :
                new ObjectParameter("cod_post", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Поставщик_товар_Result>("Поставщик_товар", cod_postParameter);
        }
    
        public virtual ObjectResult<Работа_магазина_за_период_Result> Работа_магазина_за_период(Nullable<System.DateTime> data_n, Nullable<System.DateTime> data_end)
        {
            var data_nParameter = data_n.HasValue ?
                new ObjectParameter("data_n", data_n) :
                new ObjectParameter("data_n", typeof(System.DateTime));
    
            var data_endParameter = data_end.HasValue ?
                new ObjectParameter("data_end", data_end) :
                new ObjectParameter("data_end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Работа_магазина_за_период_Result>("Работа_магазина_за_период", data_nParameter, data_endParameter);
        }
    
        public virtual int Удаление_клиента(Nullable<int> code_klienta)
        {
            var code_klientaParameter = code_klienta.HasValue ?
                new ObjectParameter("code_klienta", code_klienta) :
                new ObjectParameter("code_klienta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Удаление_клиента", code_klientaParameter);
        }
    
        public virtual ObjectResult<Zakaz_za_Period_Result> Zakaz_za_Period(Nullable<System.DateTime> data_nach, Nullable<System.DateTime> data_okonch)
        {
            var data_nachParameter = data_nach.HasValue ?
                new ObjectParameter("data_nach", data_nach) :
                new ObjectParameter("data_nach", typeof(System.DateTime));
    
            var data_okonchParameter = data_okonch.HasValue ?
                new ObjectParameter("data_okonch", data_okonch) :
                new ObjectParameter("data_okonch", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zakaz_za_Period_Result>("Zakaz_za_Period", data_nachParameter, data_okonchParameter);
        }
    
        public virtual ObjectResult<St_Result> St(string st)
        {
            var stParameter = st != null ?
                new ObjectParameter("st", st) :
                new ObjectParameter("st", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<St_Result>("St", stParameter);
        }
    
        public virtual int ADD_NEW_REMONT(Nullable<int> code_cl, Nullable<int> cod_tov)
        {
            var code_clParameter = code_cl.HasValue ?
                new ObjectParameter("code_cl", code_cl) :
                new ObjectParameter("code_cl", typeof(int));
    
            var cod_tovParameter = cod_tov.HasValue ?
                new ObjectParameter("cod_tov", cod_tov) :
                new ObjectParameter("cod_tov", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_REMONT", code_clParameter, cod_tovParameter);
        }
    
        public virtual ObjectResult<Otchet_po_vsem_sotr_period_Result> Otchet_po_vsem_sotr_period(Nullable<System.DateTime> data_n, Nullable<System.DateTime> data_end)
        {
            var data_nParameter = data_n.HasValue ?
                new ObjectParameter("data_n", data_n) :
                new ObjectParameter("data_n", typeof(System.DateTime));
    
            var data_endParameter = data_end.HasValue ?
                new ObjectParameter("data_end", data_end) :
                new ObjectParameter("data_end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Otchet_po_vsem_sotr_period_Result>("Otchet_po_vsem_sotr_period", data_nParameter, data_endParameter);
        }
    
        public virtual ObjectResult<Otchet_ST_Interval_Result> Otchet_ST_Interval(Nullable<int> id, Nullable<System.DateTime> data_n, Nullable<System.DateTime> data_end)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var data_nParameter = data_n.HasValue ?
                new ObjectParameter("data_n", data_n) :
                new ObjectParameter("data_n", typeof(System.DateTime));
    
            var data_endParameter = data_end.HasValue ?
                new ObjectParameter("data_end", data_end) :
                new ObjectParameter("data_end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Otchet_ST_Interval_Result>("Otchet_ST_Interval", idParameter, data_nParameter, data_endParameter);
        }
    }
}
